/*
          # [Operação Inicial do Banco de Dados]
          Cria a estrutura completa do banco de dados para o sistema de reservas da excursão, incluindo tabelas, políticas de segurança e dados iniciais.

          ## Query Description: [Este script estabelece a fundação do banco de dados. Ele criará as tabelas `settings`, `seats`, `passengers`, e `reservations`. Também configurará o Supabase Storage para o upload de logos e aplicará políticas de segurança iniciais. Como é a primeira execução, não há risco para dados existentes.]
          
          ## Metadata:
          - Schema-Category: "Structural"
          - Impact-Level: "High"
          - Requires-Backup: false
          - Reversible: false
          
          ## Structure Details:
          - Tabelas Criadas: public.settings, public.seats, public.passengers, public.reservations
          - Storage Buckets: 'assets' para logos e outras mídias.
          
          ## Security Implications:
          - RLS Status: Habilitado para todas as tabelas.
          - Policy Changes: Sim, políticas de acesso público (leitura) e anônimo (escrita) serão criadas.
          - Auth Requirements: Nenhuma autenticação de usuário é necessária nesta fase. As políticas são abertas para o funcionamento inicial.
          
          ## Performance Impact:
          - Indexes: Chaves primárias e estrangeiras são indexadas por padrão.
          - Triggers: Nenhum.
          - Estimated Impact: Baixo. A criação inicial do esquema é uma operação rápida.
          */

-- 1. EXTENSIONS (se não existirem)
create extension if not exists "uuid-ossp" with schema extensions;

-- 2. LIMPEZA (Remove tabelas antigas se existirem, para garantir um início limpo)
drop table if exists public.reservations cascade;
drop table if exists public.passengers cascade;
drop table if exists public.seats cascade;
drop table if exists public.settings cascade;

-- 3. TABELA DE CONFIGURAÇÕES (Armazena configurações globais do sistema)
create table public.settings (
  id int primary key generated by default as identity,
  key text unique not null,
  value jsonb not null,
  created_at timestamptz not null default now()
);

comment on table public.settings is 'Tabela para configurações globais do sistema, como URL da logo e número de WhatsApp.';

-- 4. TABELA DE ASSENTOS (Catálogo de todos os assentos disponíveis no ônibus)
create table public.seats (
  id text primary key,
  "number" int not null,
  "type" text not null, -- 'leito' ou 'semi-leito'
  floor text not null, -- 'inferior' ou 'superior'
  price numeric(10, 2) not null
);

comment on table public.seats is 'Catálogo de todos os assentos, seus tipos e preços. O status é derivado da tabela de reservas.';

-- 5. TABELA DE PASSAGEIROS (Armazena dados dos passageiros que fazem reservas)
create table public.passengers (
  id uuid primary key default gen_random_uuid(),
  name text not null,
  cpf text not null unique,
  email text not null,
  phone text not null,
  birth_date date not null,
  created_at timestamptz not null default now()
);

comment on table public.passengers is 'Armazena informações de cada passageiro cadastrado.';

-- 6. TABELA DE RESERVAS (O coração do sistema, ligando passageiros a assentos)
create table public.reservations (
  id uuid primary key default gen_random_uuid(),
  passenger_id uuid references public.passengers(id) on delete set null,
  seat_ids text[] not null,
  status text not null default 'reserved', -- 'reserved', 'confirmed', 'expired'
  payment_method text, -- 'card', 'pix_single', 'pix_installments'
  installments int,
  total_price numeric(10, 2) not null,
  created_at timestamptz not null default now(),
  expires_at timestamptz not null
);

comment on table public.reservations is 'Registra todas as reservas, status de pagamento e assentos selecionados.';


-- 7. DADOS INICIAIS
-- Inserir configurações padrão
insert into public.settings (key, value)
values 
  ('app_settings', '{
    "logoUrl": "https://i.ibb.co/Stx3pW7/logo-comadesma-gold.png",
    "whatsappNumber": "+5562999999999",
    "reservationTimeoutHours": 24,
    "emailNotifications": true,
    "smsNotifications": false
  }');

-- Inserir todos os assentos
-- Andar Inferior - Leito (12 assentos)
insert into public.seats (id, "number", "type", floor, price) values
('leito-1', 1, 'leito', 'inferior', 950.00),
('leito-2', 2, 'leito', 'inferior', 950.00),
('leito-3', 3, 'leito', 'inferior', 950.00),
('leito-4', 4, 'leito', 'inferior', 950.00),
('leito-5', 5, 'leito', 'inferior', 950.00),
('leito-6', 6, 'leito', 'inferior', 950.00),
('leito-7', 7, 'leito', 'inferior', 950.00),
('leito-8', 8, 'leito', 'inferior', 950.00),
('leito-9', 9, 'leito', 'inferior', 950.00),
('leito-10', 10, 'leito', 'inferior', 950.00),
('leito-11', 11, 'leito', 'inferior', 950.00),
('leito-12', 12, 'leito', 'inferior', 950.00);

-- Andar Superior - Semi-Leito (44 assentos)
insert into public.seats (id, "number", "type", floor, price) values
('semi-leito-1', 13, 'semi-leito', 'superior', 800.00),
('semi-leito-2', 14, 'semi-leito', 'superior', 800.00),
('semi-leito-3', 15, 'semi-leito', 'superior', 800.00),
('semi-leito-4', 16, 'semi-leito', 'superior', 800.00),
('semi-leito-5', 17, 'semi-leito', 'superior', 800.00),
('semi-leito-6', 18, 'semi-leito', 'superior', 800.00),
('semi-leito-7', 19, 'semi-leito', 'superior', 800.00),
('semi-leito-8', 20, 'semi-leito', 'superior', 800.00),
('semi-leito-9', 21, 'semi-leito', 'superior', 800.00),
('semi-leito-10', 22, 'semi-leito', 'superior', 800.00),
('semi-leito-11', 23, 'semi-leito', 'superior', 800.00),
('semi-leito-12', 24, 'semi-leito', 'superior', 800.00),
('semi-leito-13', 25, 'semi-leito', 'superior', 800.00),
('semi-leito-14', 26, 'semi-leito', 'superior', 800.00),
('semi-leito-15', 27, 'semi-leito', 'superior', 800.00),
('semi-leito-16', 28, 'semi-leito', 'superior', 800.00),
('semi-leito-17', 29, 'semi-leito', 'superior', 800.00),
('semi-leito-18', 30, 'semi-leito', 'superior', 800.00),
('semi-leito-19', 31, 'semi-leito', 'superior', 800.00),
('semi-leito-20', 32, 'semi-leito', 'superior', 800.00),
('semi-leito-21', 33, 'semi-leito', 'superior', 800.00),
('semi-leito-22', 34, 'semi-leito', 'superior', 800.00),
('semi-leito-23', 35, 'semi-leito', 'superior', 800.00),
('semi-leito-24', 36, 'semi-leito', 'superior', 800.00),
('semi-leito-25', 37, 'semi-leito', 'superior', 800.00),
('semi-leito-26', 38, 'semi-leito', 'superior', 800.00),
('semi-leito-27', 39, 'semi-leito', 'superior', 800.00),
('semi-leito-28', 40, 'semi-leito', 'superior', 800.00),
('semi-leito-29', 41, 'semi-leito', 'superior', 800.00),
('semi-leito-30', 42, 'semi-leito', 'superior', 800.00),
('semi-leito-31', 43, 'semi-leito', 'superior', 800.00),
('semi-leito-32', 44, 'semi-leito', 'superior', 800.00),
('semi-leito-33', 45, 'semi-leito', 'superior', 800.00),
('semi-leito-34', 46, 'semi-leito', 'superior', 800.00),
('semi-leito-35', 47, 'semi-leito', 'superior', 800.00),
('semi-leito-36', 48, 'semi-leito', 'superior', 800.00),
('semi-leito-37', 49, 'semi-leito', 'superior', 800.00),
('semi-leito-38', 50, 'semi-leito', 'superior', 800.00),
('semi-leito-39', 51, 'semi-leito', 'superior', 800.00),
('semi-leito-40', 52, 'semi-leito', 'superior', 800.00),
('semi-leito-41', 53, 'semi-leito', 'superior', 800.00),
('semi-leito-42', 54, 'semi-leito', 'superior', 800.00),
('semi-leito-43', 55, 'semi-leito', 'superior', 800.00),
('semi-leito-44', 56, 'semi-leito', 'superior', 800.00);


-- 8. CONFIGURAÇÃO DO STORAGE (Para upload de logos)
insert into storage.buckets (id, name, public)
values ('assets', 'assets', true)
on conflict (id) do nothing;

-- 9. POLÍTICAS DE SEGURANÇA (ROW LEVEL SECURITY)
-- Habilitar RLS em todas as tabelas
alter table public.settings enable row level security;
alter table public.seats enable row level security;
alter table public.passengers enable row level security;
alter table public.reservations enable row level security;

-- Políticas para acesso público/anônimo (sem login)
-- AVISO: Estas políticas são abertas para permitir o funcionamento inicial.
-- Em um ambiente de produção com múltiplos usuários, elas devem ser restringidas.

create policy "Allow public read access on settings"
  on public.settings for select using (true);

create policy "Allow public read access on seats"
  on public.seats for select using (true);

create policy "Allow anonymous access to passengers"
  on public.passengers for all using (true) with check (true);

create policy "Allow anonymous access to reservations"
  on public.reservations for all using (true) with check (true);

create policy "Allow authenticated users to update settings"
  on public.settings for update using (auth.role() = 'authenticated') with check (auth.role() = 'authenticated');

-- Políticas de Storage
create policy "Public read access for assets"
  on storage.objects for select using (bucket_id = 'assets');

create policy "Allow authenticated uploads for assets"
  on storage.objects for insert with check (bucket_id = 'assets' and auth.role() = 'authenticated');

create policy "Allow authenticated updates for assets"
  on storage.objects for update with check (bucket_id = 'assets' and auth.role() = 'authenticated');

create policy "Allow authenticated deletes for assets"
  on storage.objects for delete using (bucket_id = 'assets' and auth.role() = 'authenticated');
